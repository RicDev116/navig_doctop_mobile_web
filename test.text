import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';
import 'package:get/get.dart';
import 'package:navigation_propuesta/src/widgets/generic_app_bar.dart';
import 'package:navigation_propuesta/src/widgets/generic_desktop_bar.dart';

abstract class ResponsiveWidgetV2<T> extends GetView<T> {

  ResponsiveWidgetV2({
    Key? key, 
    required this.bodyMobile,
    required this.bodyDesktop,
  }) : super(key: key);

  final Widget bodyMobile;
  final Widget bodyDesktop;
  
  static const bool isMobileDevice = !kIsWeb;
  static const bool isWebDevice = kIsWeb;
  final bool isSmallDevice = MediaQuery.of(Get.context!).size.width <= 650;
  final bool isBigDevice = MediaQuery.of(Get.context!).size.width > 650;



  @override
  Widget build(BuildContext context) {

    Get.find<T>;

    print("Is movil device? " + isMobileDevice.toString());

    return SafeArea(
      child: Scaffold(
        appBar: isWebDevice && isBigDevice
          ?GenericDeskBar()
          :isMobileDevice
            ?GenericAppBar(
              hasControllNavigation: true,
            )
            :GenericAppBar(
              hasControllNavigation: (isWebDevice && isSmallDevice)?false:true,//Aquí se identifica que no va a haber navegación si es webdevice y smallDevice,
            ) as PreferredSizeWidget,
        body: Builder(
          builder: (context){
            late Widget body;
            if(isWebDevice && isBigDevice){
              body = bodyDesktop;
            }
            if(isMobileDevice){
              body = bodyMobile;
            }
            if(isWebDevice && isSmallDevice){
              body = bodyMobile; //TODO WITHOUT NAVIGATION
            }
            return body;
          } 
        ),
      ),
    );
  }
}   




